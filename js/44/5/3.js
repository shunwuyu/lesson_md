// 作用域就是变量和函数的可访问范围，
// 当代码在一个环境中执行时，会创建变量对象
// 的一个作用域链（scope chain），
// 来保证对执行环境有权访问的变量和函数的顺序访问。
// 作用域第一个对象始终是当前执行代码所在环境的变量对象。
// 然后会一层层向外查找，直到发现第一个指定的变量为止。

// （1）我们根据之前介绍的作用域和作用域链的概念可以知道，
// 在函数体内，变量会就近查找，而函数参数会存在于函数体内
// 部作用域中，所以当我们把全局变量a当作入参传递给函数时，
// 又由于全局a是引用类型，此时只是引用了它的地址，
// 那么我们通过a.age设置属性时，全局a也会改变。

// （2）第二步是将a赋予了一个新的值，
// 此时的a根据就近查找其实是参数a，
// 本质上是将参数a赋予了一个新的对象，
// 这个时候和全局变量的a没有任何关系了，
// 此时函数最后会返回一个新的对象。

var a = {name: 'xuxi'};
function b(a){
  a.age = 12;
  a = {num: 1};
  return a
}
var a1 = b(a);
console.log(a, a1)