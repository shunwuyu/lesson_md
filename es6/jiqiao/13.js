// JavaScript中有没有可能让(a== 1 && a ==2 && a==3)返回true
// 而JS中的隐式转换规则大概也是出这道题的初衷。
// 隐式转换部分规则
// JS中使用==对两个值进行比较时，会进行如下操作：
// 1. 将两个被比较的值转换为相同的类型。
// 2. 转换后（等式的一边或两边都可能被转换）再进行值的比较。

// a类型为String，并且可转换为数字1（'1' == 1 => true）
// a类型为Boolean，并且可转换为数字1 (true == 1 => true)
// a类型为Object，通过转换机制后，可转换为数字1 （请看下文）
// 调用valueOf，如果可以转换为原始类型，则返回，否则进行3。
// 调用toString，如果可以转换为原始类型，则返回，否则进行4。

let a = {
    i: 1,
    // valueOf替换成toString效果是一样的
    // toString
    valueOf() {
        return this.i++
    }
}

if (a == 1 && a == 2 && a == 3) {
    console.log('前端胖头鱼') // 前端胖头鱼
}
  