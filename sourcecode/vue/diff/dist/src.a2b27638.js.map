{"version":3,"sources":["src/flags.js","src/h.js","src/render.js","src/index.js"],"names":["VNodeFlags","ELEMENT_HTML","ELEMENT_SVG","COMPONENT_STATEFUL_NORMAL","COMPONENT_STATEFUL_SHOULD_KEEP_ALIVE","COMPONENT_STATEFUL_KEPT_ALIVE","COMPONENT_FUNCTIONAL","TEXT","FRAGMENT","PORTAL","ELEMENT","COMPONENT_STATEFUL","COMPONENT","ChildrenFlags","UNKNOWN_CHILDREN","NO_CHILDREN","SINGLE_VNODE","KEYED_VNODES","NONE_KEYED_VNODES","MULTIPLE_VNODES","Fragment","Symbol","Portal","h","tag","data","children","flags","target","functional","prototype","render","childFlags","Array","isArray","length","normalizeVNodes","_isVNode","createTextVNode","el","newChildren","i","child","key","push","text","vnode","container","prevVNode","mount","isSVG","mountElement","mountComponent","mountText","mountFragment","mountPortal","console","log","document","createElementNS","createElement","k","style","appendChild","mountStatefulComponent","mountFunctionalComponent","instance","$vnode","$el","createTextNode","placeholder","querySelector","elementVNode","height","width","background","getElementById"],"mappings":";;AGAA;;AACA;;AHDA,IAAMA,UAAU,GAAG;AACjB,AEDF;AFEEC,AGCF,EHDEA,YAAY,EAAE,CAFG;AAGjB,ACHF,AEIA,ADHe,SAAS8B,MAAT,CAAgBe,KAAhB,EAAuBC,SAAvB,EAAkC;AFG/C7C,AGEF,ADJE,EFEAA,EGEIsE,EDJExB,OFEK,EAAE,AEFE,CCIC,EDJED,CCIC,CHFD,CAJD,MEEU,CAACD,CCK5B,IDLA,CCImB,ADL4B,CAE/C,CCKA;AHHA,AGIEgB,EAAAA,KAAK,EAAE;AHHT3D,AGIIsE,ADNJ,EFEAtE,EGIIsE,EDNAzB,ICMM,EAAE,GDNC,ICKJ,ADLQ,IAAjB,EAAuB,EFEE,EAAE,KAAK,CANf;AAOjB,ACLK,AESD0B,ADNF,IDHStD,AESPsD,IDNE5B,CCMG,EAAE,CFTQ,CCGjB,EDHoBzB,ACGT,GCIJ,GFPmB,EAAvB;ADMLjB,AGIIuE,ADNA,EFEJvE,EGIIuE,UAAU,EAAE,sBHJoB,EAAE,KAAK,CAR1B;AASjB,ACNK,AEMI,ADFL1B,IDJO3B,ECIP2B,IDJa,CCIR,CAACH,CDJUzB,ICIX,EDJiB,ACIT0B,EDJZ,OCII,CAAL,CAFS,CAGT;AFEJ1C,AGFA,CAFmB,CHInBA,CGKA,UAAEiB,SAAF,EAAU,OHLmB,EAAE,KAAK,CAVnB;AAWjB,AGIYM,ADNRmB,ECMQnB,IDNRmB,ECMc,EAAE,KDNP,CAACD,KAAV,GAAkBA,KAAlB;AFGJxC,ACPK,AEUK,ADLP,CCKH,CHHAA,CGGqC,CACnC,KFXYiB,CAAT,CAAWC,GAAX,AEWD,EFX2C,IEW7C,EHJkB,AGIR,EHJU,EGIpB,EAAgB,CHJS,CAZV,WGgBf,CADmC,EAEnC,UAAE,MAAF,EAAU,IAAV,EAAgB,aAAhB,CAFmC,CAArC,CATmB,CAArB,EAeA;AHRE,ACR+C,ACM9C,MDNoBC,IAA0B,uEAArB,IAAqB;ADS/ClB,ACT+C,AEkBjD,ADXC,EFECA,IAAI,ACT4BmB,EDS1B,KAAK,CAdM,ACK8B,OEkB1C8C,YAAP,EAAqBd,QAAQ,CAACkB,cAAT,CAAwB,KAAxB,CAArB,GACA,iBFnB2C,IAAM;ADU/C,ACTA,AEmBF;AHTEpE,ACTA,AEmBF,ADZA,EFEEA,ICTImB,GCOGsB,CFEC,CCTC,CDSC,ECTE,ACOd,CAAeH,EFEE,CAhBE,ACOjB,ECOF,EAAsBC,SAAtB,EAAiCG,KAAjC,EAAwC;AFGtC,AGUF,ADbwC,MAC9BvB,KAD8B,GACpBmB,KADoB,CAC9BnB,KAD8B;AFItClB,ACVA,AEoBF,EHVEA,ICVI,EDUE,EAAE,GCVGe,EDUE,CCVT,KAAe,QAAnB,EAA6B;ADRZ,ACQc,AEqBjC,ADbE,CFhBF,EAqBA,GELMG,KAAK,GAAG3B,kBAAWU,OAAvB,EAAgC;ADP9BiB,AEqBJ,ADbIwB,IDRAxB,ACQAwB,KDRK,GAAG3B,GAAG,CCQC,CAACsB,GDRG,ECQJ,EAAQC,CDRZ,GAAgB/C,KCQZ,EAAmBkD,KAAnB,CAAZ,KDRmChD,WAA3B,GAAyCF,kBAAWC,YAA5D;AACD,AEqBH,ADbG,GDVD,ACQA,MDNO,ACQA,IDRIuB,ACQAG,GDRG,ECQE,GDRGP,ACQApB,QDRZ,EAAsB,QCQCY,SAAvB,EAAkC;AFI3CZ,ACZiC,AEsBjC,ADbI,UFGM,CAACU,OAAX,GAAqBV,UAAU,CAACC,YAAX,GAA0BD,UAAU,CAACE,WAA1D,EACA;ACZIyB,AEsBJ,ADbIyB,IDTAzB,ACSAyB,KDTK,GAAGpD,MCSM,CAAC8C,KAAD,EAAQC,IDTHvC,KCSL,EAAmB0C,CDTjC,ICSc,CAAd;AFIJlD,ACZG,AEsBH,ADbG,GDXM,ACQA,MDNA,ACSA,CFGC,CAACW,ECZEa,ACSAG,GDTG,ECSE,GDTGL,ACSAtB,MDTZ,EDYT,ACZ6B,GDa3BA,OEJ8BO,GFIpB,CAACJ,AEJJ,EAA6B,uBFIpC,GACAH,UAAU,CAACI,oCADX,GAEAJ,UAAU,CAACK,6BAHb;AAKAL,ACjBiC,AEuBjC,ADbI,UFOM,CAACY,SAAX,GACEZ,UAAU,CAACW,kBAAX,GAAgCX,UAAU,CAACM,oBAD7C;AAGA,ACnBIqB,AEuBJ,ADbI0B,IFSExC,ACnBFc,ACUA0B,KDVK,GAAGrD,CCUC,CAAC8C,GFSK,EETN,CFSS,CETDC,SDVEtC,ACUV,CAAT,KDVA;ADoBF,ACnBEe,AEuBJ,ADbG,GAHM,CDPLA,GAAG,ECUE,CDVCC,GCUGE,CDVC,IAAIF,ACUA,GAAGzB,CDVC,CAAC4B,MAAnB,CAFyB,CAGzB,QCS4BpB,QAAvB,EAAiC;AFUxCM,AClBC,AEsBH,ADbI,EFSFA,CCtBO,MAIA,SDkBS,EAAE,CAFE;AAGpB,AClBE,AEsBJ,ADbIwC,IAAAA,aAAa,CAACR,KAAD,EAAQC,SAAR,EAAmBG,KAAnB,CAAb;AFUFnC,AClBE,AEuBJ,ADdG,EFSDA,CEZO,MAGA,IFSI,AETAY,EFSE,CAJO,EELJ,GAAG3B,kBAAWS,MAAvB,EAA+B;AFUtC,AClBE,AEuBJ,ADdI,QDTIe,GAAG,KAAK,IAAR,IAAgB,QAAOA,GAAP,MAAe,QAAnC,EAA6C;ADmB/CR,AClBI,AEuBN,ADdIuC,EFSFvC,EETEuC,UFSU,CETC,CFSC,AETAT,KFSK,AETN,CFGO,CEHCC,SAAR,EAAmBG,KAAnB,CAAX;AFUF,AClBI,AEuBN,ADdG;AFUDjC,AClBIU,AEuBN,ADdC,EFSCV,IClBIU,KAAK,GDkBG,AClBAH,EDkBE,CClBC,CAACK,GDkBG,CARC,MCVR,GACI7B,kBAAWM,oBADf,CACoC;ADkBhD,ACnBY,AEwBd,QFtBkBN,kBAAWG,yBAFvB,CAH2C,CAKM;ADkBrDe,ACjBG,AEsBL,ADdA,EFSEA,GCvBE,ICcKiC,EDRE,IAAI,IDiBI,EAAE,AETrB,CDRsB3B,ACQAsB,GDRP,CDiBW,CET1B,EAA6BC,CDRC,QCQ9B,EDRW,ACQ6BG,EDRE,GCQ1C,EAA+C;AFDzB,ACNhBvB,AEsBN,ADdE6B,CFFF,CEEEA,IDRI7B,GCQG,CAAC8B,CDRC,ECQT,CDPcjC,ACOFsB,GDPK,CAAChB,CCOD,CAACH,KAAlB,EDPc,IAAiBH,GAAG,CAACM,SAAJ,CAAcC,MAA/B,GACM/B,kBAAWG,yBADjB,CAC2C;AAD3C,AEsBhB,ADdE+C,EAAAA,KAAK,CDNelD,ECMZkD,KAAK,IAAIJ,KAAK,CAACnB,CDNQrB,ICMd,GAAcN,aDT3B,KCSsCE,WAA1C;AFUFW,ACfK,AEoBL,ADdE,MAAM0B,EAAE,GAAGW,EFSA,CAAC/B,EETI,GAC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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const VNodeFlags = {\r\n  // html 标签\r\n  ELEMENT_HTML: 1,\r\n  // SVG 标签 2\r\n  ELEMENT_SVG: 1 << 1, \r\n  // 普通有状态组件\r\n  COMPONENT_STATEFUL_NORMAL: 1 << 2,\r\n  // 需要被keepAlive的有状态组件\r\n  COMPONENT_STATEFUL_SHOULD_KEEP_ALIVE: 1 << 3,\r\n  // 已经被keepAlive的有状态组件\r\n  COMPONENT_STATEFUL_KEPT_ALIVE: 1 << 4,\r\n  // 函数式组件\r\n  COMPONENT_FUNCTIONAL: 1 << 5,\r\n  // 纯文本\r\n  TEXT: 1 << 6,\r\n  // Fragment\r\n  FRAGMENT: 1 << 7,\r\n  // Portal\r\n  PORTAL: 1 << 8\r\n}\r\n\r\n// html 和 svg 都是标签元素，可以用 ELEMENT 表示\r\nVNodeFlags.ELEMENT = VNodeFlags.ELEMENT_HTML | VNodeFlags.ELEMENT_SVG\r\n// 普通有状态组件、需要被keepAlive的有状态组件、已经被keepAlice的有状态组件 都是“有状态组件”，统一用 COMPONENT_STATEFUL 表示\r\nVNodeFlags.COMPONENT_STATEFUL =\r\n  VNodeFlags.COMPONENT_STATEFUL_NORMAL |\r\n  VNodeFlags.COMPONENT_STATEFUL_SHOULD_KEEP_ALIVE |\r\n  VNodeFlags.COMPONENT_STATEFUL_KEPT_ALIVE\r\n\r\nVNodeFlags.COMPONENT =\r\n  VNodeFlags.COMPONENT_STATEFUL | VNodeFlags.COMPONENT_FUNCTIONAL\r\n\r\nconst ChildrenFlags = {\r\n  // 未知的 children 类型\r\n  UNKNOWN_CHILDREN: 0,\r\n  // 没有 children\r\n  NO_CHILDREN: 1,\r\n  // children 是单个 VNode\r\n  SINGLE_VNODE: 1 << 1,\r\n  // children 是多个拥有 key 的 VNode\r\n  KEYED_VNODES: 1 << 2,\r\n  // children 是多个没有 key 的 VNode\r\n  NONE_KEYED_VNODES: 1 << 3,\r\n}\r\n\r\nChildrenFlags.MULTIPLE_VNODES =\r\n  ChildrenFlags.KEYED_VNODES | ChildrenFlags.NONE_KEYED_VNODES\r\n\r\nexport { VNodeFlags, ChildrenFlags }","import { VNodeFlags, ChildrenFlags } from './flags'\r\n\r\nexport const Fragment = Symbol()\r\nexport const Portal = Symbol()\r\n\r\nexport function h(tag, data=null, children=null) {\r\n  // 确定 flags?\r\n  let flags = null\r\n  if (typeof tag === 'string') { //标签\r\n    flags = tag === 'svg' ? VNodeFlags.ELEMENT_SVG : VNodeFlags.ELEMENT_HTML\r\n  } else if (tag === Fragment) { //\r\n    flags = VNodeFlags.FRAGMENT\r\n  } else if (tag === Portal) {   /**可以被到处挂载的 Fragment */\r\n    flags = VNodeFlags.PORTAL \r\n    tag = data && data.target \r\n    // console.log(tag); \r\n  } else {\r\n    // console.log( tag);\r\n    // 兼容 Vue2 的对象式组件\r\n    if (tag !== null && typeof tag === 'object') {\r\n      // console.log(tag);\r\n      // flags = tag.functional\r\n      flags = tag.functional\r\n                ? VNodeFlags.COMPONENT_FUNCTIONAL // 函数式组件\r\n                : VNodeFlags.COMPONENT_STATEFUL_NORMAL // 有状态组件\r\n    } else if (typeof tag === 'function') {\r\n      flags =\r\n                tag.prototype && tag.prototype.render\r\n                    ? VNodeFlags.COMPONENT_STATEFUL_NORMAL // 有状态组件\r\n                    : VNodeFlags.COMPONENT_FUNCTIONAL\r\n    }\r\n  }\r\n\r\n  let childFlags = null\r\n  if (Array.isArray(children)) {\r\n    const { length } = children\r\n    if (length === 0) {\r\n      childFlags = ChildrenFlags.NO_CHILDREN\r\n    } else if (length === 1) {\r\n      childFlags = ChildrenFlags.SINGLE_VNODE\r\n      children = children[0]\r\n    } else {\r\n      childFlags = ChildrenFlags.KEYED_VNODES\r\n      children = normalizeVNodes(children)\r\n    }\r\n  } else if (children == null) {\r\n    // 没有子节点\r\n    childFlags = ChildrenFlags.NO_CHILDREN\r\n  } else if (children._isVNode) {\r\n    // 单个子节点\r\n    childFlags = ChildrenFlags.SINGLE_VNODE\r\n  } else {\r\n    // 其他情况都作为文本节点处理，即单个子节点，会调用 createTextVNode 创建纯文本类型的 VNode\r\n    childFlags = ChildrenFlags.SINGLE_VNODE\r\n    children = createTextVNode(children + '')\r\n}\r\n\r\n  return {\r\n    _isVNode: true,\r\n    flags,\r\n    tag,\r\n    data,\r\n    children,\r\n    childFlags,\r\n    el: null\r\n  }\r\n}\r\n\r\nfunction normalizeVNodes(children) {\r\n  const newChildren = []\r\n  // 遍历 children\r\n  for (let i = 0; i < children.length; i++) {\r\n      const child = children[i]\r\n      if (child.key == null) {\r\n          // 如果原来的 VNode 没有key，则使用竖线(|)与该VNode在数组中的索引拼接而成的字符串作为key\r\n          child.key = '|' + i\r\n      }\r\n      newChildren.push(child)\r\n  }\r\n  // 返回新的children，此时 children 的类型就是 ChildrenFlags.KEYED_VNODES\r\n  return newChildren\r\n}\r\n\r\n\r\nexport function createTextVNode(text) {\r\n  return {\r\n      _isVNode: true,\r\n      // flags 是 VNodeFlags.TEXT\r\n      flags: VNodeFlags.TEXT,\r\n      tag: null,\r\n      data: null,\r\n      // 纯文本类型的 VNode，其 children 属性存储的是与之相符的文本内容\r\n      children: text,\r\n      // 文本节点没有子节点\r\n      childFlags: ChildrenFlags.NO_CHILDREN\r\n  }\r\n}\r\n","import { VNodeFlags, ChildrenFlags } from './flags'\r\nexport default function render(vnode, container) {\r\n  const prevVNode = container.vnode\r\n  // console.log(prevVNode);\r\n  if (prevVNode == null) {\r\n    if (vnode) {\r\n      // 没有旧的 VNode，使用 `mount` 函数挂载全新的 VNode\r\n      mount(vnode, container)\r\n      // 将新的 VNode 添加到 container.vnode 属性下，这样下一次渲染时旧的 VNode 就存在了\r\n      container.vnode = vnode\r\n    }\r\n  }\r\n}\r\n\r\nfunction mount(vnode, container, isSVG) {\r\n  const { flags } = vnode\r\n  if (flags & VNodeFlags.ELEMENT) {\r\n    mountElement(vnode, container, isSVG)\r\n  } else if (flags & VNodeFlags.COMPONENT) {\r\n    // 挂载组件\r\n    mountComponent(vnode, container, isSVG)\r\n  } else if (flags & VNodeFlags.TEXT) {\r\n    // 挂载纯文本\r\n    mountText(vnode, container)\r\n  } else if (flags & VNodeFlags.FRAGMENT) {\r\n    // 挂载 Fragment\r\n    mountFragment(vnode, container, isSVG)\r\n  } else if (flags & VNodeFlags.PORTAL) {\r\n    // 挂载 Portal\r\n    mountPortal(vnode, container, isSVG)\r\n  }\r\n}\r\n\r\nfunction mountElement(vnode, container, isSVG) {\r\n  console.log(vnode.flags)\r\n  isSVG = isSVG || vnode.flags & VNodeFlags.ELEMENT_SVG\r\n  const el = isSVG\r\n    ? document.createElementNS('http://www.w3.org/2000/svg', vnode.tag)\r\n    : document.createElement(vnode.tag)\r\n  vnode.el = el\r\n  const data = vnode.data\r\n  if (data) {\r\n    for (let key in data) {\r\n      switch (key) {\r\n        case 'style':\r\n          for (let k in data.style) {\r\n            el.style[k] = data.style[k]\r\n          }\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  const childFlags = vnode.childFlags\r\n  const children = vnode.children\r\n  if (childFlags !== ChildrenFlags.NO_CHILDREN) {\r\n    if (childFlags & ChildrenFlags.SINGLE_VNODE) {\r\n      mount(children, el, isSVG)\r\n    } else if (childFlags & ChildrenFlags.MULTIPLE_VNODES) {\r\n      for (let i = 0; i < children.length; i++) {\r\n        mount(children[i], el, isSVG)\r\n      }\r\n    }\r\n  }\r\n\r\n  container.appendChild(el)\r\n}\r\n\r\nfunction mountComponent(vnode, container, isSVG) {\r\n  if (vnode.flags & VNodeFlags.COMPONENT_STATEFUL) {\r\n    mountStatefulComponent(vnode, container, isSVG)\r\n  } else {\r\n    mountFunctionalComponent(vnode, container, isSVG)\r\n  }\r\n}\r\n\r\nfunction mountStatefulComponent(vnode, container, isSVG) {\r\n  // 创建组件实例\r\n  const instance = new vnode.tag()\r\n  // 渲染VNode\r\n  instance.$vnode = instance.render()\r\n  // 挂载\r\n  mount(instance.$vnode, container, isSVG)\r\n  // el 属性值 和 组件实例的 $el 属性都引用组件的根DOM元素\r\n  instance.$el = vnode.el = instance.$vnode.el\r\n}\r\n\r\nfunction mountText(vnode, container) {\r\n  const el = document.createTextNode(vnode.children)\r\n  container.appendChild(el)\r\n}\r\n\r\nfunction mountFragment(vnode, container, isSVG) {\r\n  // 拿到 children 和 childFlags\r\n  const { children, childFlags } = vnode\r\n  switch (childFlags) {\r\n    case ChildrenFlags.SINGLE_VNODE:\r\n      // 如果是单个子节点，则直接调用 mount\r\n      mount(children, container, isSVG)\r\n      break\r\n    case ChildrenFlags.NO_CHILDREN:\r\n      // 如果没有子节点，等价于挂载空片段，会创建一个空的文本节点占位\r\n      const placeholder = createTextVNode('')\r\n      mountText(placeholder, container)\r\n      break\r\n    default:\r\n      // 多个子节点，遍历挂载之\r\n      for (let i = 0; i < children.length; i++) {\r\n        mount(children[i], container, isSVG)\r\n      }\r\n  }\r\n}\r\n\r\nfunction mountPortal(vnode, container) {\r\n  const { tag, children, childFlags } = vnode\r\n\r\n  // 获取挂载点\r\n  const target = typeof tag === 'string' ? document.querySelector(tag) : tag\r\n\r\n  if (childFlags & ChildrenFlags.SINGLE_VNODE) {\r\n    // 将 children 挂载到 target 上，而非 container\r\n    mount(children, target)\r\n  } else if (childFlags & ChildrenFlags.MULTIPLE_VNODES) {\r\n    for (let i = 0; i < children.length; i++) {\r\n      // 将 children 挂载到 target 上，而非 container\r\n      mount(children[i], target)\r\n    }\r\n  }\r\n}","import { h, Fragment, Portal } from './h';\r\nimport render from './render'\r\n\r\n// const fragmentVNode = h(Fragment, null, [h('h1'), h('h1')])\r\n// console.log(fragmentVNode)\r\n\r\nconst elementVNode = h(\r\n  'div',\r\n  {\r\n    style: {\r\n      height: '100px',\r\n      width: '100px',\r\n      background: 'red'\r\n    }\r\n  },\r\n  h(Portal, { target: '#portal-box' }, [\r\n    h('span', null, '我是标题1......'),\r\n    h('span', null, '我是标题2......')\r\n  ])\r\n)\r\n\r\n// console.log(elementVNode)\r\n\r\nrender(elementVNode, document.getElementById('app'))\r\n// class MyComponent {\r\n//   render() {\r\n//     return h(\r\n//       'div',\r\n//       {\r\n//         style: {\r\n//           background: 'green'\r\n//         }\r\n//       },\r\n//       [\r\n//         h('span', null, '我是组件的标题1......'),\r\n//         h('span', null, '我是组件的标题2......')\r\n//       ]\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const compVnode = h(MyComponent)\r\n// render(compVnode, document.getElementById('app'))\r\n// 函数式组件挂载\r\n// function MyFunctionalComponent() {\r\n//   // 返回要渲染的内容描述，即 VNode\r\n//   return h(\r\n//     'div',\r\n//     {\r\n//       style: {\r\n//         background: 'green'\r\n//       }\r\n//     },\r\n//     [\r\n//       h('span', null, '我是组件的标题1......'),\r\n//       h('span', null, '我是组件的标题2......')\r\n//     ]\r\n//   )\r\n// }\r\n\r\n\r\n\r\n// const compVnode = h(MyFunctionalComponent)\r\n// console.log(compVnode)\r\n\r\n// // 旧的 VNode\r\n// const prevVNode = h('div', null, [\r\n//   h('p', null, '旧的子节点1'),\r\n//   h('p', null, '旧的子节点2')\r\n// ]);\r\n\r\n// // 新的 VNode\r\n// const nextVNode = h('div', null, [\r\n//   h('p', null, '新的子节点1'),\r\n//   h('p', null, '新的子节点2'),\r\n//   h('p', null, '新的子节点3')\r\n// ])\r\n\r\n\r\n\r\n"]}