{"id":"HNkt","dependencies":[{"name":"D:\\lesson_md\\serverless\\tecent\\try-react\\package.json","includedInParent":true,"mtime":1616247883592},{"name":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1613892060573},{"name":"./toFinite","loc":{"line":1,"column":23},"parent":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\toInteger.js","resolved":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\toFinite.js"}],"generated":{"js":"var r=require(\"./toFinite\");function e(e){var t=r(e),i=t%1;return t==t?i?t-i:t:0}module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/toInteger.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/toInteger.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules/lodash/toInteger.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/lodash/toInteger.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules/lodash/toInteger.js","original":{"line":29,"column":0},"generated":{"line":1,"column":28}},{"source":"node_modules/lodash/toInteger.js","original":{"line":29,"column":0},"generated":{"line":1,"column":37}},{"source":"node_modules/lodash/toInteger.js","original":{"line":29,"column":0},"generated":{"line":1,"column":39}},{"source":"node_modules/lodash/toInteger.js","original":{"line":30,"column":0},"generated":{"line":1,"column":42}},{"source":"node_modules/lodash/toInteger.js","original":{"line":30,"column":0},"generated":{"line":1,"column":46}},{"source":"node_modules/lodash/toInteger.js","original":{"line":30,"column":0},"generated":{"line":1,"column":48}},{"source":"node_modules/lodash/toInteger.js","original":{"line":30,"column":0},"generated":{"line":1,"column":50}},{"source":"node_modules/lodash/toInteger.js","original":{"line":31,"column":0},"generated":{"line":1,"column":53}},{"source":"node_modules/lodash/toInteger.js","original":{"line":31,"column":0},"generated":{"line":1,"column":55}},{"source":"node_modules/lodash/toInteger.js","original":{"line":31,"column":0},"generated":{"line":1,"column":57}},{"source":"node_modules/lodash/toInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":59}},{"source":"node_modules/lodash/toInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":66}},{"source":"node_modules/lodash/toInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":69}},{"source":"node_modules/lodash/toInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":71}},{"source":"node_modules/lodash/toInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":73}},{"source":"node_modules/lodash/toInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":75}},{"source":"node_modules/lodash/toInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":77}},{"source":"node_modules/lodash/toInteger.js","original":{"line":33,"column":0},"generated":{"line":1,"column":79}},{"source":"node_modules/lodash/toInteger.js","original":{"line":36,"column":0},"generated":{"line":1,"column":81}},{"source":"node_modules/lodash/toInteger.js","original":{"line":36,"column":0},"generated":{"line":1,"column":88}},{"source":"node_modules/lodash/toInteger.js","original":{"line":36,"column":0},"generated":{"line":1,"column":96}}],"sources":{"node_modules/lodash/toInteger.js":"var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n"},"lineCount":null}},"error":null,"hash":"764e106c5973856ebd0c52f5f636994d","cacheData":{"env":{}}}