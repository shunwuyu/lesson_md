{"id":"node_modules/antd/es/_util/type.js","dependencies":[{"name":"D:\\lesson_md\\serverless\\tecent\\try-react\\package.json","includedInParent":true,"mtime":1616247883592},{"name":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\antd\\package.json","includedInParent":true,"mtime":1615940295219}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tupleNum = exports.tuple = void 0;\n\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nvar tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args;\n};\n\nexports.tuple = tuple;\n\nvar tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args;\n};\n\nexports.tupleNum = tupleNum;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":2,"column":7}},{"name":"tuple","generated":{"line":9,"column":4},"source":"node_modules/antd/es/_util/type.js","original":{"line":2,"column":11}},{"generated":{"line":9,"column":9},"source":"node_modules/antd/es/_util/type.js","original":{"line":2,"column":16}},{"generated":{"line":9,"column":12},"source":"node_modules/antd/es/_util/type.js","original":{"line":2,"column":19}},{"name":"tuple","generated":{"line":9,"column":21},"source":"node_modules/antd/es/_util/type.js","original":{"line":2,"column":28}},{"generated":{"line":9,"column":26},"source":"node_modules/antd/es/_util/type.js","original":{"line":2,"column":19}},{"generated":{"line":9,"column":29},"source":"node_modules/antd/es/_util/type.js","original":{"line":2,"column":36}},{"generated":{"line":10,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":2}},{"generated":{"line":10,"column":7},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":7}},{"name":"_len","generated":{"line":10,"column":11},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":11}},{"generated":{"line":10,"column":15},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":15}},{"name":"arguments","generated":{"line":10,"column":18},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":18}},{"generated":{"line":10,"column":27},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":27}},{"name":"length","generated":{"line":10,"column":28},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":28}},{"generated":{"line":10,"column":34},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":7}},{"name":"args","generated":{"line":10,"column":36},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":36}},{"generated":{"line":10,"column":40},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":40}},{"generated":{"line":10,"column":43},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":43}},{"name":"Array","generated":{"line":10,"column":47},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":47}},{"generated":{"line":10,"column":52},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":43}},{"name":"_len","generated":{"line":10,"column":53},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":53}},{"generated":{"line":10,"column":57},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":43}},{"generated":{"line":10,"column":58},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":7}},{"name":"_key","generated":{"line":10,"column":60},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":60}},{"generated":{"line":10,"column":64},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":64}},{"generated":{"line":10,"column":67},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":67}},{"generated":{"line":10,"column":68},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":2}},{"name":"_key","generated":{"line":10,"column":70},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":70}},{"generated":{"line":10,"column":74},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":74}},{"name":"_len","generated":{"line":10,"column":77},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":77}},{"generated":{"line":10,"column":81},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":2}},{"name":"_key","generated":{"line":10,"column":83},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":83}},{"generated":{"line":10,"column":87},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":87}},{"generated":{"line":10,"column":89},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":2}},{"generated":{"line":10,"column":91},"source":"node_modules/antd/es/_util/type.js","original":{"line":3,"column":91}},{"name":"args","generated":{"line":11,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":4}},{"name":"args","generated":{"line":11,"column":4},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":4}},{"generated":{"line":11,"column":8},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":8}},{"name":"_key","generated":{"line":11,"column":9},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":9}},{"generated":{"line":11,"column":13},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":8}},{"generated":{"line":11,"column":14},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":4}},{"name":"arguments","generated":{"line":11,"column":17},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":17}},{"generated":{"line":11,"column":26},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":26}},{"name":"_key","generated":{"line":11,"column":27},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":27}},{"generated":{"line":11,"column":31},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":26}},{"generated":{"line":11,"column":32},"source":"node_modules/antd/es/_util/type.js","original":{"line":4,"column":4}},{"generated":{"line":12,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":5,"column":3}},{"generated":{"line":14,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":7,"column":2}},{"name":"args","generated":{"line":14,"column":9},"source":"node_modules/antd/es/_util/type.js","original":{"line":7,"column":9}},{"generated":{"line":14,"column":13},"source":"node_modules/antd/es/_util/type.js","original":{"line":7,"column":2}},{"generated":{"line":15,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":8,"column":1}},{"generated":{"line":15,"column":1},"source":"node_modules/antd/es/_util/type.js","original":{"line":2,"column":7}},{"generated":{"line":19,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":9,"column":7}},{"name":"tupleNum","generated":{"line":19,"column":4},"source":"node_modules/antd/es/_util/type.js","original":{"line":9,"column":11}},{"generated":{"line":19,"column":12},"source":"node_modules/antd/es/_util/type.js","original":{"line":9,"column":19}},{"generated":{"line":19,"column":15},"source":"node_modules/antd/es/_util/type.js","original":{"line":9,"column":22}},{"name":"tupleNum","generated":{"line":19,"column":24},"source":"node_modules/antd/es/_util/type.js","original":{"line":9,"column":31}},{"generated":{"line":19,"column":32},"source":"node_modules/antd/es/_util/type.js","original":{"line":9,"column":22}},{"generated":{"line":19,"column":35},"source":"node_modules/antd/es/_util/type.js","original":{"line":9,"column":42}},{"generated":{"line":20,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":2}},{"generated":{"line":20,"column":7},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":7}},{"name":"_len2","generated":{"line":20,"column":11},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":11}},{"generated":{"line":20,"column":16},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":16}},{"name":"arguments","generated":{"line":20,"column":19},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":19}},{"generated":{"line":20,"column":28},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":28}},{"name":"length","generated":{"line":20,"column":29},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":29}},{"generated":{"line":20,"column":35},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":7}},{"name":"args","generated":{"line":20,"column":37},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":37}},{"generated":{"line":20,"column":41},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":41}},{"generated":{"line":20,"column":44},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":44}},{"name":"Array","generated":{"line":20,"column":48},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":48}},{"generated":{"line":20,"column":53},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":44}},{"name":"_len2","generated":{"line":20,"column":54},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":54}},{"generated":{"line":20,"column":59},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":44}},{"generated":{"line":20,"column":60},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":7}},{"name":"_key2","generated":{"line":20,"column":62},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":62}},{"generated":{"line":20,"column":67},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":67}},{"generated":{"line":20,"column":70},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":70}},{"generated":{"line":20,"column":71},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":2}},{"name":"_key2","generated":{"line":20,"column":73},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":73}},{"generated":{"line":20,"column":78},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":78}},{"name":"_len2","generated":{"line":20,"column":81},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":81}},{"generated":{"line":20,"column":86},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":2}},{"name":"_key2","generated":{"line":20,"column":88},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":88}},{"generated":{"line":20,"column":93},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":93}},{"generated":{"line":20,"column":95},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":2}},{"generated":{"line":20,"column":97},"source":"node_modules/antd/es/_util/type.js","original":{"line":10,"column":97}},{"name":"args","generated":{"line":21,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":4}},{"name":"args","generated":{"line":21,"column":4},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":4}},{"generated":{"line":21,"column":8},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":8}},{"name":"_key2","generated":{"line":21,"column":9},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":9}},{"generated":{"line":21,"column":14},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":8}},{"generated":{"line":21,"column":15},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":4}},{"name":"arguments","generated":{"line":21,"column":18},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":18}},{"generated":{"line":21,"column":27},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":27}},{"name":"_key2","generated":{"line":21,"column":28},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":28}},{"generated":{"line":21,"column":33},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":27}},{"generated":{"line":21,"column":34},"source":"node_modules/antd/es/_util/type.js","original":{"line":11,"column":4}},{"generated":{"line":22,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":12,"column":3}},{"generated":{"line":24,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":14,"column":2}},{"name":"args","generated":{"line":24,"column":9},"source":"node_modules/antd/es/_util/type.js","original":{"line":14,"column":9}},{"generated":{"line":24,"column":13},"source":"node_modules/antd/es/_util/type.js","original":{"line":14,"column":2}},{"generated":{"line":25,"column":0},"source":"node_modules/antd/es/_util/type.js","original":{"line":15,"column":1}},{"generated":{"line":25,"column":1},"source":"node_modules/antd/es/_util/type.js","original":{"line":9,"column":7}}],"sources":{"node_modules/antd/es/_util/type.js":"// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport var tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args;\n};\nexport var tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args;\n};"},"lineCount":null}},"error":null,"hash":"a813369adeb1846a2adeb710b129da2f","cacheData":{"env":{}}}