{"id":"node_modules/lodash/toNumber.js","dependencies":[{"name":"D:\\lesson_md\\serverless\\tecent\\try-react\\package.json","includedInParent":true,"mtime":1616247883592},{"name":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1613892060573},{"name":"./_baseTrim","loc":{"line":1,"column":23},"parent":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\toNumber.js","resolved":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\_baseTrim.js"},{"name":"./isObject","loc":{"line":2,"column":23},"parent":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\toNumber.js","resolved":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\isObject.js"},{"name":"./isSymbol","loc":{"line":3,"column":23},"parent":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\toNumber.js","resolved":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\isSymbol.js"}],"generated":{"js":"var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/toNumber.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/lodash/toNumber.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}}],"sources":{"node_modules/lodash/toNumber.js":"var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"},"lineCount":65}},"error":null,"hash":"fd6d25626e55c66c2164778309693805","cacheData":{"env":{}}}