{"id":"MOxx","dependencies":[{"name":"D:\\lesson_md\\serverless\\tecent\\try-react\\package.json","includedInParent":true,"mtime":1616247883592},{"name":"D:\\lesson_md\\serverless\\tecent\\try-react\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1613892060573}],"generated":{"js":"function r(r,n){for(var e=-1,t=null==r?0:r.length;++e<t;)if(n(r[e],e,r))return!0;return!1}module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_arraySome.js","original":{"line":11,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":11,"column":0},"generated":{"line":1,"column":9}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":11,"column":0},"generated":{"line":1,"column":11}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":11,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":15,"column":0},"generated":{"line":1,"column":16}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":12,"column":0},"generated":{"line":1,"column":20}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":12,"column":0},"generated":{"line":1,"column":24}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":12,"column":0},"generated":{"line":1,"column":27}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":13,"column":0},"generated":{"line":1,"column":29}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":13,"column":0},"generated":{"line":1,"column":31}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":13,"column":0},"generated":{"line":1,"column":37}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":13,"column":0},"generated":{"line":1,"column":39}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":13,"column":0},"generated":{"line":1,"column":41}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":13,"column":0},"generated":{"line":1,"column":43}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":15,"column":0},"generated":{"line":1,"column":52}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":15,"column":0},"generated":{"line":1,"column":54}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":16,"column":0},"generated":{"line":1,"column":57}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":16,"column":0},"generated":{"line":1,"column":60}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":16,"column":0},"generated":{"line":1,"column":62}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":16,"column":0},"generated":{"line":1,"column":64}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":16,"column":0},"generated":{"line":1,"column":67}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":16,"column":0},"generated":{"line":1,"column":69}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":17,"column":0},"generated":{"line":1,"column":72}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":17,"column":0},"generated":{"line":1,"column":79}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":20,"column":0},"generated":{"line":1,"column":81}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":20,"column":0},"generated":{"line":1,"column":88}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":23,"column":0},"generated":{"line":1,"column":90}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":23,"column":0},"generated":{"line":1,"column":97}},{"source":"node_modules/lodash/_arraySome.js","original":{"line":23,"column":0},"generated":{"line":1,"column":105}}],"sources":{"node_modules/lodash/_arraySome.js":"/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n"},"lineCount":null}},"error":null,"hash":"e3ec9fc26eaec58591a4c7f6cb056bc3","cacheData":{"env":{}}}