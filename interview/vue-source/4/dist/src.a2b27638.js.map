{"version":3,"sources":["src/flags.js","src/h.js","src/render.js","src/index.js"],"names":["VNodeFlags","ELEMENT_HTML","ELEMENT_SVG","COMPONENT_STATEFUL_NORMAL","COMPONENT_STATEFUL_SHOULD_KEEP_ALIVE","COMPONENT_STATEFUL_KEPT_ALIVE","COMPONENT_FUNCTIONAL","TEXT","FRAGMENT","PORTAL","ELEMENT","COMPONENT_STATEFUL","COMPONENT","ChildrenFlags","UNKNOWN_CHILDREN","NO_CHILDREN","SINGLE_VNODE","KEYED_VNODES","NONE_KEYED_VNODES","MULTIPLE_VNODES","Fragment","Symbol","Portal","h","tag","data","children","flags","target","functional","prototype","render","childFlags","Array","isArray","length","normalizeVNodes","_isVNode","createTextVNode","el","newChildren","i","child","key","push","text","vnode","container","prevVNode","console","log","mount","isSVG","mountElement","mountComponent","mountText","mountFragment","mountPortal","document","createElementNS","createElement","k","style","appendChild","createTextNode","elementVNode","height","width","background","getElementById"],"mappings":";;AGAA;;AACA;;AHDA,IAAMA,UAAU,GAAG;AACjB,AEDF;AFEEC,ACFF,AEGA,EHDEA,EGCIgE,UHDQ,EAAE,AGCE,CHHC,EGGE,UACnB,KADmB,EAEnB;AHFA,AGGEH,ADJW,ECIXA,KAAK,EAAE,ADJa/B,MAAT,CAAgBe,KAAhB,EAAuBC,SAAvB,EAAkC;AFE/C7C,AGGIgE,ADJJ,EFCAhE,EGGIgE,EDJElB,ICII,EAAE,CHHD,EAAE,AEDE,GAAGD,CCGT,CHFS,CAJD,MEGU,CAACD,KAA5B;AFGA,AGEIqB,ADJJlB,EAAAA,ECIIkB,KAAK,ADJF,CAACjB,CCIG,EDJX,CAAYF,ICEH,KDFT,EAAuB,2BAAvB;AFGA7C,ACNK,AEQDiE,EHFJjE,ECNWiB,AEQPgD,QFRe,EEQL,CFRQ/C,CEQN,KFRY,EAAvB,IDMoB,EAAE,KAAK,CAPf;AAQjB,AGFS,ADDT,MAAI2B,SAAS,IAAI,IAAjB,EAAuB;AFIvB5C,ACPK,AEGL,ADCE,CCHiB,CHMnBA,CGGA,CFVWkB,ICILwB,CCHa,CFDF,AECnB,EAYA,CFbsBzB,ACIlB,EAAW,IDJa,EAArB,iBDO+B,EAAE,KAAK,CAT1B;AAUjB,AEHI;AFIJhB,AGKF,ADRM8C,EFGJ9C,IEHI8C,KAAK,CAACL,KAAD,EAAQC,ECQZkB,ODRI,CAAL,CAFS,CFKgB,AEFzB,EFE2B,AGKjC,EAAqBP,GHLiB,CAXnB,IGgBU,CAACW,cAAT,CAAwB,KAAxB,CAArB;AHJE,ACRK,SAAS9C,CAAT,CAAWC,GAAX,EAA8C;ADSnDlB,ACTmD,ACM/CyC,EFGJzC,ICTqBmB,ACMjBsB,IDN+C,KCMtC,CAACD,KAAV,CFGgB,EAAE,AEHAA,KFGK,AEHvB,CFVa,mDCIW,IAAuB;ADWnD,ACXmD,ACOhD,MDP+BpB,QAAiB,uEAAN,IAAM;ADYnDnB,ACXA,ACOC,EFIDA,CEXA,GFWI,EAAE,CEJC,CACL,GFGS,CAhBM;AAiBjB,ACXA,ACQE,MDREoB,KAAK,GAAG,IAAZ;ADYAnB,AEHE,EFGFA,QAAQ,EAAE,KAAK,CAlBE;AAmBjB,ACZA,ACSE,MDTE,OAAOgB,GAAP,KAAe,QAAnB,EA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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const VNodeFlags = {\r\n  // html 标签\r\n  ELEMENT_HTML: 1,\r\n  // SVG 标签\r\n  ELEMENT_SVG: 1 << 1,\r\n\r\n  // 普通有状态组件\r\n  COMPONENT_STATEFUL_NORMAL: 1 << 2,\r\n  // 需要被keepAlive的有状态组件\r\n  COMPONENT_STATEFUL_SHOULD_KEEP_ALIVE: 1 << 3,\r\n  // 已经被keepAlive的有状态组件\r\n  COMPONENT_STATEFUL_KEPT_ALIVE: 1 << 4,\r\n  // 函数式组件\r\n  COMPONENT_FUNCTIONAL: 1 << 5,\r\n\r\n  // 纯文本\r\n  TEXT: 1 << 6,\r\n  // Fragment\r\n  FRAGMENT: 1 << 7,\r\n  // Portal\r\n  PORTAL: 1 << 8\r\n}\r\n\r\n// html 和 svg 都是标签元素，可以用 ELEMENT 表示\r\nVNodeFlags.ELEMENT = VNodeFlags.ELEMENT_HTML | VNodeFlags.ELEMENT_SVG\r\n// 普通有状态组件、需要被keepAlive的有状态组件、已经被keepAlice的有状态组件 都是“有状态组件”，统一用 COMPONENT_STATEFUL 表示\r\nVNodeFlags.COMPONENT_STATEFUL =\r\n  VNodeFlags.COMPONENT_STATEFUL_NORMAL |\r\n  VNodeFlags.COMPONENT_STATEFUL_SHOULD_KEEP_ALIVE |\r\n  VNodeFlags.COMPONENT_STATEFUL_KEPT_ALIVE\r\n// 有状态组件 和  函数式组件都是“组件”，用 COMPONENT 表示\r\nVNodeFlags.COMPONENT =\r\n  VNodeFlags.COMPONENT_STATEFUL | VNodeFlags.COMPONENT_FUNCTIONAL\r\n\r\n  const ChildrenFlags = {\r\n    // 未知的 children 类型\r\n    UNKNOWN_CHILDREN: 0,\r\n    // 没有 children\r\n    NO_CHILDREN: 1,\r\n    // children 是单个 VNode\r\n    SINGLE_VNODE: 1 << 1,\r\n  \r\n    // children 是多个拥有 key 的 VNode\r\n    KEYED_VNODES: 1 << 2,\r\n    // children 是多个没有 key 的 VNode\r\n    NONE_KEYED_VNODES: 1 << 3\r\n  }\r\n\r\n  ChildrenFlags.MULTIPLE_VNODES =\r\n  ChildrenFlags.KEYED_VNODES | ChildrenFlags.NONE_KEYED_VNODES\r\n\r\nexport { VNodeFlags, ChildrenFlags }","import { VNodeFlags, ChildrenFlags } from './flags';\r\nexport const Fragment = Symbol()\r\nexport const Portal = Symbol()\r\n\r\nexport function h(tag, data = null, children = null) {\r\n  // 确定 flags\r\n  let flags = null\r\n  if (typeof tag === 'string') {\r\n    flags = tag === 'svg' ? VNodeFlags.ELEMENT_SVG : VNodeFlags.ELEMENT_HTML\r\n  } else if (tag === Fragment) {\r\n    flags = VNodeFlags.FRAGMENT\r\n  } else if (tag === Portal) {\r\n    flags = VNodeFlags.PORTAL\r\n    tag = data && data.target\r\n  } else {\r\n    // 兼容 Vue2 的对象式组件\r\n    if (tag !== null && typeof tag === 'object') {\r\n      flags = tag.functional\r\n        ? VNodeFlags.COMPONENT_FUNCTIONAL // 函数式组件\r\n        : VNodeFlags.COMPONENT_STATEFUL_NORMAL // 有状态组件\r\n    } else if (typeof tag === 'function') {\r\n      // Vue3 的类组件\r\n      flags =\r\n        tag.prototype && tag.prototype.render\r\n          ? VNodeFlags.COMPONENT_STATEFUL_NORMAL // 有状态组件\r\n          : VNodeFlags.COMPONENT_FUNCTIONAL // 函数式组件\r\n    }\r\n  }\r\n\r\n  // 确定 childFlags\r\n  let childFlags = null\r\n  if (Array.isArray(children)) {\r\n    const { length } = children\r\n    if (length === 0) {\r\n      // 没有 children\r\n      childFlags = ChildrenFlags.NO_CHILDREN\r\n    } else if (length === 1) {\r\n      // 单个子节点\r\n      childFlags = ChildrenFlags.SINGLE_VNODE\r\n      children = children[0]\r\n    } else {\r\n      // 多个子节点，且子节点使用key\r\n      childFlags = ChildrenFlags.KEYED_VNODES\r\n      children = normalizeVNodes(children)\r\n    }\r\n  } else if (children == null) {\r\n    // 没有子节点\r\n    childFlags = ChildrenFlags.NO_CHILDREN\r\n  } else if (children._isVNode) {\r\n    // 单个子节点\r\n    childFlags = ChildrenFlags.SINGLE_VNODE\r\n  } else {\r\n    // 其他情况都作为文本节点处理，即单个子节点，会调用 createTextVNode 创建纯文本类型的 VNode\r\n    childFlags = ChildrenFlags.SINGLE_VNODE\r\n    children = createTextVNode(children + '')\r\n  }\r\n\r\n  return {\r\n    _isVNode: true,\r\n    flags,\r\n    tag,\r\n    data,\r\n    children,\r\n    childFlags,\r\n    el: null\r\n  }\r\n}\r\n\r\nfunction normalizeVNodes(children) {\r\n  const newChildren = []\r\n  // 遍历 children\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    if (child.key == null) {\r\n      // 如果原来的 VNode 没有key，则使用竖线(|)与该VNode在数组中的索引拼接而成的字符串作为key\r\n      child.key = '|' + i\r\n    }\r\n    newChildren.push(child)\r\n  }\r\n  // 返回新的children，此时 children 的类型就是 ChildrenFlags.KEYED_VNODES\r\n  return newChildren\r\n}\r\n\r\nfunction createTextVNode(text) {\r\n  return {\r\n    _isVNode: true,\r\n    // flags 是 VNodeFlags.TEXT\r\n    flags: VNodeFlags.TEXT,\r\n    tag: null,\r\n    data: null,\r\n    // 纯文本类型的 VNode，其 children 属性存储的是与之相符的文本内容\r\n    children: text,\r\n    // 文本节点没有子节点\r\n    childFlags: ChildrenFlags.NO_CHILDREN\r\n  }\r\n}\r\n","import { VNodeFlags, ChildrenFlags } from './flags'\r\n\r\nexport default function render(vnode, container) {\r\n  const prevVNode = container.vnode\r\n  console.log(prevVNode, '-------------------------');\r\n  if (prevVNode == null) {\r\n    if (vnode) {\r\n      // 没有旧的 VNode，使用 `mount` 函数挂载全新的 VNode\r\n      mount(vnode, container)\r\n      // 将新的 VNode 添加到 container.vnode 属性下，这样下一次渲染时旧的 VNode 就存在了\r\n      container.vnode = vnode\r\n    }\r\n  } else {\r\n    // if (vnode) {\r\n    //   // 有旧的 VNode，则调用 `patch` 函数打补丁\r\n    //   patch(prevVNode, vnode, container)\r\n    //   // 更新 container.vnode\r\n    //   container.vnode = vnode\r\n    // } else {\r\n    //   // 有旧的 VNode 但是没有新的 VNode，这说明应该移除 DOM，在浏览器中可以使用 removeChild 函数。\r\n    //   container.removeChild(prevVNode.el)\r\n    //   container.vnode = null\r\n    // }\r\n  }\r\n}\r\n\r\nfunction mount(vnode, container, isSVG) {\r\n  const { flags } = vnode\r\n  if (flags & VNodeFlags.ELEMENT) {\r\n    // 挂载普通标签\r\n    mountElement(vnode, container, isSVG)\r\n  } else if (flags & VNodeFlags.COMPONENT) {\r\n    // 挂载组件\r\n    mountComponent(vnode, container, isSVG)\r\n  } else if (flags & VNodeFlags.TEXT) {\r\n    // 挂载纯文本\r\n    mountText(vnode, container)\r\n  } else if (flags & VNodeFlags.FRAGMENT) {\r\n    // 挂载 Fragment\r\n    mountFragment(vnode, container, isSVG)\r\n  } else if (flags & VNodeFlags.PORTAL) {\r\n    // 挂载 Portal\r\n    mountPortal(vnode, container, isSVG)\r\n  }\r\n}\r\n\r\nfunction mountElement(vnode, container, isSVG) {\r\n  isSVG = isSVG || vnode.flags & VNodeFlags.ELEMENT_SVG\r\n  const el = isSVG\r\n    ? document.createElementNS('http://www.w3.org/2000/svg', vnode.tag)\r\n    : document.createElement(vnode.tag)\r\n  vnode.el = el\r\n  const data = vnode.data\r\n  if (data) {\r\n    for (let key in data) {\r\n      switch (key) {\r\n        case 'style':\r\n          for (let k in data.style) {\r\n            el.style[k] = data.style[k]\r\n          }\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  const childFlags = vnode.childFlags\r\n  const children = vnode.children\r\n  if (childFlags !== ChildrenFlags.NO_CHILDREN) {\r\n    if (childFlags & ChildrenFlags.SINGLE_VNODE) {\r\n      mount(children, el, isSVG)\r\n    } else if (childFlags & ChildrenFlags.MULTIPLE_VNODES) {\r\n      for (let i = 0; i < children.length; i++) {\r\n        mount(children[i], el, isSVG)\r\n      }\r\n    }\r\n  }\r\n\r\n  container.appendChild(el)\r\n  // vnode.ref && vnode.ref(el)\r\n}\r\n\r\nfunction mountText(vnode, container) {\r\n  const el = document.createTextNode(vnode.children)\r\n  vnode.el = el\r\n  container.appendChild(el)\r\n}\r\n","import { h } from './h'\r\nimport render from './render'\r\n\r\nconst elementVNode = h(\r\n  'div',\r\n  {\r\n    style: {\r\n      height: '100px',\r\n      width: '100px',\r\n      background: 'red'\r\n    }\r\n  },\r\n  '我是文本'\r\n)\r\n\r\n// console.log(elementVNode);\r\nrender(elementVNode, document.getElementById('app'))"]}